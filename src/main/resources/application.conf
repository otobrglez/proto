akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  ## loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  ## stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  ## logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  ##actor {
  ##  provider = "akka.cluster.ClusterActorRefProvider"
  ##
  ##  default-dispatcher {
  ##    # Throughput for default Dispatcher, set to 1 for as fair as possible
  ##    throughput = 10
  ##  }
  ##}

  ssl-config.ssl.debug.all = false
  ssl-config.ssl.loose.acceptAnyCertificate = true
  ssl-config.ssl.loose.allowWeakProtocols = true
  ssl-config.ssl.loose.acceptAnyCertificate = true
  ssl-config.ssl.default = true
  ssl-config.ssl.debug {
    ssl = false
    sslctx = false
    defaultctx = false
  }

  http {
    server-header = akka-http/${akka.version}
  }
}

http {
  interface = "0.0.0.0"
  port = 9090
}

services {
  ip-api {
    host = "ip-api.com"
    port = 80
  }
}

Protox3 {
  akka.actor.deployment {
    /Master {
      router = random-pool
      nr-of-instances = 5
    }
    /Collector {
      router = round-robin-pool
      nr-of-instances = 10

      lower-bound = 2
      upper-bound = 10
    }
  }

  # fork-join-executor.parallelism-min = 10
  # fork-join-executor.parallelism-max = 10
  # MORE: http://doc.akka.io/docs/akka/2.4.2/general/configuration.html
}

ProtoX4 {
  app {
    interface = 0.0.0.0
    port = 6000
  }
}